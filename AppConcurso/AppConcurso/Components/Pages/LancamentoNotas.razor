@page "/lancarNotas"
@rendermode InteractiveServer
@using AppConcurso.Models
@using AppConcurso.Controllers
@inject CandidatoController candidatoController
@inject CargoController cargoController
@inject InscricaoController inscricaoController
@inject NavigationManager navegacao

<div class="container py-4">
    <h1 class="display-6 text-primary mb-4">
        <i class="fas fa-edit me-2"></i>Lançamento de Notas
    </h1>

    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0"><i class="fas fa-search me-2"></i>Buscar Inscrição</h5>
        </div>
        <div class="card-body">
            <div class="input-group mb-3">
                <input type="text" class="form-control" @bind="valorBusca" @bind:event="oninput"
                       placeholder="Digite o número de inscrição ou CPF" />
                <button class="btn btn-primary" @onclick="BuscarInscricao">
                    <i class="fas fa-search me-2"></i>Buscar
                </button>
            </div>

            @if (inscricao != null)
            {
                <div class="card mt-3 shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0"><i class="fas fa-user-graduate me-2"></i>Dados do Candidato</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Nome:</strong> @inscricao.Candidato.Nome</p>
                                <p><strong>CPF:</strong> @FormatarCPF(inscricao.Candidato.Cpf)</p>
                                <p><strong>Data Nasc.:</strong> @inscricao.Candidato.DataNasc?.ToString("dd/MM/yyyy")</p>
                            </div>
                            <div class="col-md-6">
                                <p><strong>Cargo:</strong> @inscricao.Cargo.NomeCargo</p>
                                <p><strong>Edital:</strong> @inscricao.Cargo.Edital</p>
                                <p><strong>Inscrição:</strong> @inscricao.NumInscricao</p>
                            </div>
                        </div>

                        <hr />

                        <h5 class="mb-3"><i class="fas fa-clipboard-check me-2"></i>Lançar Notas</h5>

                        <div class="row g-3">
                            <div class="col-md-4">
                                <div class="form-floating">
                                    <input type="number" step="0.1" min="0" max="70" @bind="inscricao.NotaConhGerais"
                                           class="form-control" />
                                    <label>Nota Geral (0-70)</label>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-floating">
                                    <input type="number" step="0.1" min="0" max="30" @bind="inscricao.NotaConhEspec"
                                           class="form-control" />
                                    <label>Nota Específica (0-30)</label>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-floating">
                                    <input class="form-control" value="@((inscricao.NotaConhGerais ?? 0) + (inscricao.NotaConhEspec ?? 0))" disabled />
                                    <label>Total (0-100)</label>
                                </div>
                            </div>
                        </div>

                        <div class="mt-4 d-flex gap-2">
                            <button @onclick="SalvarNotas" class="btn btn-success">
                                <i class="fas fa-save me-2"></i>Salvar Notas
                            </button>
                            <button @onclick="Limpar" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-2"></i>Limpar
                            </button>
                        </div>
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(mensagem))
            {
                <div class="alert @classeAlert mt-3">
                    <i class="@(classeAlert == "alert-success" ? "fas fa-check-circle" : "fas fa-exclamation-triangle") me-2"></i>
                    @mensagem
                </div>
            }
        </div>
    </div>
</div>

@code {
    private Inscricao inscricao;
    private string valorBusca = "";
    private string mensagem = "";
    private string classeAlert = "alert-success";

    private async Task BuscarInscricao()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(valorBusca))
            {
                MostrarMensagem("Digite um número de inscrição ou CPF para buscar", "alert-warning");
                return;
            }

            inscricao = await inscricaoController.BuscarInscricao(valorBusca);

            if (inscricao == null)
            {
                MostrarMensagem("Nenhuma inscrição encontrada com os critérios informados", "alert-danger");
            }
            else
            {
                mensagem = "";
            }
        }
        catch
        {
            MostrarMensagem("Erro na busca. Tente novamente.", "alert-danger");
        }
    }

    private async Task SalvarNotas()
    {
        try
        {
            if (inscricao.NotaConhGerais < 0 || inscricao.NotaConhGerais > 70 ||
            inscricao.NotaConhEspec < 0 || inscricao.NotaConhEspec > 30)
            {
                MostrarMensagem("Notas devem ser entre 0 e 70 para Conhecimentos Gerais e entre 0 e 30 para Conhecimentos Específicos!",
                "alert-danger");
                return;
            }

            await inscricaoController.AtualizarNotas(inscricao);
            MostrarMensagem("Notas salvas com sucesso!", "alert-success");
        }
        catch
        {
            MostrarMensagem("Erro ao salvar notas. Tente novamente.", "alert-danger");
        }
    }

    private void Limpar()
    {
        inscricao = null;
        valorBusca = "";
        mensagem = "";
    }

    private void MostrarMensagem(string texto, string tipo)
    {
        mensagem = texto;
        classeAlert = tipo;
        StateHasChanged();
    }

    private string FormatarCPF(string cpf)
    {
        if (string.IsNullOrEmpty(cpf)) return "";
        if (cpf.Length == 11) return $"{cpf.Substring(0, 3)}.{cpf.Substring(3, 3)}.{cpf.Substring(6, 3)}-{cpf.Substring(9, 2)}";
        return cpf;
    }
}